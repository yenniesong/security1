spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=test
spring.datasource.password=1234
spring.datasource.url=jdbc:mysql://localhost:3306/security


#spring.mvc.view.prefix=/templates/
#spring.mvc.view.suffix=.mustache => Ã¬ÂÂÃ¬ÂÂ¨Ã«ÂÂÃ«ÂÂ¨ Ã¬ÂÂÃ«ÂÂ? Ã¬ÂÂ´Ã«Â¯Â¸ dependencies Ã­ÂÂ´Ã¬Â¤ÂÃ¬ÂÂ

#ÃÂ¬ÃÂÃÂÃÂ«ÃÂ²ÃÂ ÃÂ¬ÃÂÃÂÃÂ¬ÃÂÃÂ ÃÂ¬ÃÂÃÂÃÂ¬ÃÂ ÃÂÃÂ¬ÃÂÃÂ DDL ÃÂ«ÃÂ¬ÃÂ¸ÃÂ¬ÃÂÃÂ ÃÂ¬ÃÂÃÂÃÂ¬ÃÂÃÂ±ÃÂ­ÃÂÃÂÃÂ¬ÃÂÃÂ¬ DBÃÂ¬ÃÂÃÂ ÃÂ¬ÃÂ ÃÂÃÂ¬ÃÂÃÂ©ÃÂ­ÃÂÃÂÃÂ«ÃÂÃÂ¤ #create update none
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#ÃÂ¬ÃÂ ÃÂÃÂ¬ÃÂÃÂ©ÃÂ«ÃÂÃÂ sqlÃÂ«ÃÂ¬ÃÂ¸ÃÂ¬ÃÂÃÂ ÃÂ«ÃÂ³ÃÂ´ÃÂ¬ÃÂÃÂ¬ÃÂ¬ÃÂ¤ÃÂÃÂ«ÃÂÃÂ¤.
spring.jpa.show-sql=true

spring.main.allow-circular-references=true

# google login
spring.security.oauth2.client.registration.google.client-id=854416543615-m9b719ni238vmf3jeot92a97ichv9bf4.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

#facebook login
spring.security.oauth2.client.registration.facebook.client-id=1342577443031366
spring.security.oauth2.client.registration.facebook.client-secret=49dc4c29c7a33a418c744bbf73a0861f
spring.security.oauth2.client.registration.facebook.scope=public_profile,email

#naver login
spring.security.oauth2.client.registration.naver.client-id=EZLTkkoJ_WWbZF3j7qOA
spring.security.oauth2.client.registration.naver.client-secret=uBF7k7pCTM
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver


# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# 회원 정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌


